/**
 * @file PushRecoverService.idl
 * @brief Services for tendon joint controlling interface
 */
module OpenHRP
{
  interface PushRecoverService
  {
      typedef sequence<string> sSequence;

      struct PushDetectParam
      {
          double diff_margin_threshold_x;
          double diff_margin_threshold_y;
      };

      boolean dummy(in double a);

      /**
       * @brief Shift to PushRecoveryReady mode.
       * @param
       * @return true if set successfully, false otherwise
       */
      boolean startPushRecovery();

      /**
       * @brief Shift to PassThrough mode.
       * @param
       * @return true if set successfully, false otherwise
       */
      boolean stopPushRecovery();

      /**
       * @brief start logging on pr RTC
       * @param
       * @return true if set successfully, false otherwise
       */
      boolean startLogging();

      /**
       * @brief stop logging on pr RTC
       * @param
       * @return true if set successfully, false otherwise
       */
      boolean stopLogging();

      /**
       * @brief Stop stepping immediately.
       * @param
       * @return true if set successfully, false otherwise
       */
      boolean emergencyStop();

      /**
       * @brief Enable push detection
       * @param
       * @return true if set successfully, false otherwise
       */
      boolean enablePushDetect();

      /**
       * @brief disable push detection
       * @param
       * @return true if set successfully, false otherwise
       */
      boolean disablePushDetect();

      /**
       * @brief Set Push Detect Param
       * @param
       * @return true if set successfully, false otherwise
       */
      boolean setPushDetectParam(in PushDetectParam i_param);

      /**
       * @brief Get Push Detect Param
       * @param
       * @return true if set successfully, false otherwise
       */
      boolean getPushDetectParam(out PushDetectParam o_param);
  };
};
